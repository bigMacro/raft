syntax="proto3";

package raftpb;

service Raft {
    rpc AppendEntries(AppendEntriesArgs) returns(AppendEntriesReply){}
    rpc RequestVotes(RequestVotesArgs) returns(RequestVotesReply){}
    rpc InstallSnapshot(InstallSnapshotArgs) returns(InstallSnapshotReply){}
    rpc Propose(ProposeArgs) returns(ProposeReply){}
    rpc ProposeConfChange(ProposeArgs) returns(ProposeReply){}
}

enum EntryType {
    Normal = 0;
    Config = 1;
    None = 2;
}

message Entry {
    EntryType Type = 1;
    uint64 Term = 2;
    uint64 Index = 3;
    bytes Data = 4;
}

message AppendEntriesArgs {
    uint64 Term = 1;
    uint64 LeaderID = 2;
    uint64 PrevLogIndex = 3;
    uint64 PrevLogTerm = 4;
    repeated Entry Entries = 5;
    uint64 LeaderCommit = 6;
}

message AppendEntriesReply {
    uint64 Term = 1;
    bool Success = 2;
}

message RequestVotesArgs {
    uint64 Term = 1;
    uint64 CandidateID = 2;
    uint64 LastLogIndex = 3;
    uint64 LastLogTerm = 4;
}

message RequestVotesReply {
    uint64 Term = 1;
    bool VoteGranted = 2;
}

message InstallSnapshotArgs {
    uint64 Term = 1;
    uint64 LeaderID = 2;
    bytes Data = 3;
    uint64 LastIncludeIndex = 4;
    uint64 LastIncludeTerm = 5;
}

message InstallSnapshotReply {
    uint64 Term = 1;
}

// ProposeArgs is the log entry stored in Data which will be replicated to raft servers.
message ProposeArgs {
    bytes Data = 1;
}

// ProposeReply returns the proposes's result. If Success is True, propose succeeds. Otherwise, ErrCode indicates the error reason. ErrNotReady means you can retry later; ErrNotLeader means the current server is not leader, you should ask for Addr server.
message ProposeReply {
    bool Success = 1;
    uint64 ErrCode = 2;
    string ErrMsg = 3;
    string Addr = 4;
}
